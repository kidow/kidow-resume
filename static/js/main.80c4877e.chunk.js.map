{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","className","href","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.80c4877e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"page-container\"> \n          <h1>이력서</h1>\n\n          {/* 프로필 */}\n          <div className=\"section\">  \n            <div className=\"flex\">\n              <div className='image' />\n              <ul className=\"profile__list\">\n                <li className=\"profile__name\"><strong>김동욱</strong></li>\n                <div className=\"profile__meta\">\n                  <li>1995.04.04</li>\n                  <li>010-5140-5480</li>\n                  <li>wcgo2ling@gmail.com</li>\n                  <li><a href=\"https://github.com/kidow\">https://github.com/kidow</a></li>\n                </div>\n                <li className=\"profile__intro\">안녕하세요. 풀스택 개발자입니다. 프론</li>\n              </ul>\n            </div>\n          </div>\n\n          \n          <div className=\"section education-container\">  \n            <h2 className=\"section__title\">학력</h2>\n            <dl>\n              <dt>2018.10 - 2018.12</dt>\n              <dd>코딩 부트캠프 코드스테이츠 프리코스</dd>\n            </dl>\n            <dl>\n              <dt>2015.03</dt>\n              <dd>세종대학교 물리학과 입학</dd>\n            </dl>\n          </div>\n\n          <div className=\"section tech-stack-container\">  \n            <h2 className=\"section__title\">기술 스택</h2>  \n            <dl>\n              <dt>Frontend</dt>\n              <div>\n                <dd>React.js</dd>\n                <dd>Scss</dd>\n              </div>\n            </dl>\n            <dl>\n              <dt>Backend</dt>\n              <div>\n                <dd>Node.js</dd>\n                <dd>Express.js</dd>\n              </div>\n            </dl>\n            <dl>\n              <dt>Database</dt>\n              <div>\n                <dd>MongoDB</dd>\n              </div>\n            </dl>\n            <dl>\n              <dt>Auth</dt>\n              <div>\n                <dd>Json Web Token (JWT)</dd>\n              </div>\n            </dl>\n            <dl>\n              <dt>Infra</dt>\n              <div>\n                <dd>AWS</dd>\n              </div>\n            </dl>\n          </div>\n\n          <div className=\"section project-container\">  \n            <h2 className=\"section__title\">프로젝트</h2> \n            <div>\n              <dl>\n                <dt><a href='www.naver.com'>My Dev Diary</a> (2018.10.31 - 2018.11.06)</dt>\n                <dd>하루하루 배운 것과 배워야 하는 것을 메모하는 애플리케이션.</dd>\n                <dd>React.js, Redux, Express.js, MongoDB, Scss, Heroku, Mlab</dd>\n                <dd><a href='https://github.com/kidow/my-dev-diary'>https://github.com/kidow/my-dev-diary</a></dd>\n              </dl>\n              <dl>\n                <dt><a href='www.naver.com'>Kidow-SNS</a> (2018.11.25 - 2018.12.01)</dt>\n                <dd>JWT 인증과 CRUD를 이용한 간단한 SNS 애플리케이션.</dd>\n                <dd>React.js, Redux, Express.js, JWT, MongoDB, Scss, Heroku, Mlab</dd>\n                <dd><a href='https://github.com/kidow/my-dev-diary'>https://github.com/kidow/my-dev-diary</a></dd>\n              </dl>\n              <dl>\n                <dt><a href='www.naver.com'>Sukbingo</a> (2018.12.02 - 진행 중)</dt>\n                <dd>사람들과 소통하는 빙고 웹 게임 애플리케이션.</dd>\n                <dd>React.js, Redux, Express.js, MongoDB, Scss, Heroku, Mlab</dd>\n                <dd><a href='https://github.com/kidow/my-dev-diary'>https://github.com/kidow/my-dev-diary</a></dd>\n              </dl>\n            </div> \n          </div>\n\n          <div className=\"section tech-stack-container\">  \n            <h2 className=\"section__title\">언어</h2> \n            <dl>\n              <dt>영어</dt>\n              <dd>업무상 의사소통 가능</dd>\n            </dl>\n          </div>\n            \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}